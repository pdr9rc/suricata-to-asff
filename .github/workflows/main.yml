name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: dependencies
      working-directory: SuricataToASFF
      run: dotnet restore
    - name: build
      run: | 
            dotnet build SuricataToASFF.csproj --configuration Development
            dotnet publish SuricataToASFF.csproj -o ./staging/app /p:EnvironmentName=Production
    - name: copy executable
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        source: "./staging/app/SuricataToASFF"
        target: "/home/ubuntu"
    - name: copy service file
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        source: "./SuricataToASFF.service"
        target: "/home/ubuntu"
    - name: remote ssh command
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script: |
                cd ../../home/ubuntu
                cp SuricataTOASFF.service ../../etc/systemd/system/ 
                cp SuricataToASFF ../../root/SuricataToASFF
                sudo systemctl daemon-reload
                sudo systemctl status SuricataToASFF
                sudo systemctl start SuricataToASFF.service
                ./tmNIDS
                sudo systemctl status SuricataToASFF
